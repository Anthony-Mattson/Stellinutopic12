---
AWSTemplateFormatVersion: "2010-09-09"

Description: CFN template to create a 2 stage pipeline.

Parameters:
  BucketName:
    Type: String
    Description: S3 Bucket Name
  Branch:
    Description: GitHub branch name
    Type: String
  Repository:
    Description: GitHub repository name
    Type: String
  GitHubOwner:
    Type: String
    Description: The owner of the GitHub account
  GitHubOAuthToken:
    Type: String
    Description: Token needed to access GitHub
    NoEcho: true
  StackName:
    Type: String
    Description: Name of the stack from the CLI

Resources:
# Artifact bucket
  CodePipelineBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

# IAM execution role for pipeline 
  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.com
      Policies:
        - PolicyName: InlinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action: iam:PassRole
                Effect: Allow
                Resource: "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/CloudWatchFullAccess

# Webhook to allow access to GitHub
  GitHubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      Filters:
        - JsonPath: $.ref
          MatchEquals: 'refs/heads/{Branch}'
      TargetPipeline: !Ref PracticePipeline
      TargetAction: SourceAction
      TargetPipelineVersion: !GetAtt PracticePipeline.Version
      RegisterWithThirdParty: true

# Build stage for the pipeline
  BuildStage:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts: 
        Type: CODEPIPELINE
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt CodePipelineExecutionRole.Arn
      Source:
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                ruby: 2.6
        Type: CODEPIPELINE

# Test stage for the pipeline
  TestStage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts: 
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt CodePipelineExecutionRole.Arn
      Source:
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                ruby: 2.6
        Type: CODEPIPELINE
          
# Pipeline for deployment
  PracticePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      ArtifactStore: 
        Location: !Ref CodePipelineBucket
        Type: S3
      Name: topic12pipeline
      RoleArn: !GetAtt CodePipelineExecutionRole.Arn 
      Stages: 
        - Name: Source
          Actions: 
          - ActionTypeId: 
              Category: Source
              Owner: ThirdParty
              Provider: GitHub
              Version: 1
            Configuration:
              Owner: !Ref GitHubOwner
              Repo: !Ref Repository
              Branch: !Ref Branch
              OAuthToken: !Ref GitHubOAuthToken
              PollForSourceChanges: false
            OutputArtifacts:
              - Name: SourceOutput
            RunOrder: 1
            Name: SourceAction
        - Name: Build
          Actions: 
          - ActionTypeId: 
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: 1
            Configuration:
              ProjectName: !Ref BuildStage
            InputArtifacts:
              - Name: SourceOutput
            OutputArtifacts:
              - Name: BuildOutput
            RunOrder: 1
            Name: BuildAction
        - Name: Deploy
          Actions: 
            - ActionTypeId: 
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt CodePipelineExecutionRole.Arn
                StackName: !Ref StackName
                TemplatePath: SourceOutput::bucket.yaml
              InputArtifacts:
                - Name: SourceOutput
              Name: DeployAction
              RunOrder: 1
        - Name: Test
          Actions: 
            - ActionTypeId: 
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref TestStage
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: TestOutput
              Name: TestAction
              RunOrder: 1